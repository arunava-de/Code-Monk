def root(D, i):
    while D[i] != i:
        D[i] = D[D[i]]
        i = D[i]
    return i

def union(D, size, A, B):
    root_A = root(D, A)
    root_B = root(D, B)
    if root_A == root_B:
        pass
    else:
        D[root_B] = root_A
        size[root_A] += size[root_B]
        size[root_B] = 1

X, Y = map(int, input().split())
D = {}
size = {}

for i in range(X+Y):
    if i < X:
        D["M"+str(i)] = "M"+str(i)
        size["M"+str(i)] = 1
    else:
        D["W"+str(i-X)] = "W"+str(i-X)
        size["W"+str(i-X)] = 1
        
q1 = int(input())

for i in range(q1):
    A, B = map(int,input().split())
    A = "M" + str(A-1)
    B = "M" + str(B-1)
    union(D, size, A, B)
    
q2 = int(input())
 
for i in range(q2):
    A, B = map(int,input().split())
    A = "W" + str(A-1)
    B = "W" + str(B-1)
    union(D, size, A, B)   

q3 = int(input())
 
for i in range(q3):
    A, B = map(int,input().split())
    A = "M" + str(A-1)
    B = "W" + str(B-1)
    union(D, size, A, B) 
    
roots = set()

for i in D.keys():
    r = root(D, i)
    roots = roots | {r}
    
men = {}
women = {}

for i in roots:
    men[i] = 0
    women[i] = 0

for i in D.keys():
    r = root(D, i)
    if i[0] == 'M':
        if r in men.keys():
            men[r] += 1
        else:
            men[r] = 1
    else:
        if r in women.keys():
            women[r] += 1
        else:
            women[r] = 1

res = 0
for i in roots:
    sum = 0
    for j in roots-{i}:
        sum += women[j]
    res += men[i]*sum
    
print(res)
