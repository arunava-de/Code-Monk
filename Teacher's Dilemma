class disjset:

	def __init__(self,N):
		self.comp = list(range(0,N))
		self.size = [1]*N

	def find(self,v):
		u = v
		while (self.comp[v] != v):
			v = self.comp[v]
		while (u != v):
			w = self.comp[u]
			self.comp[u] = v
			u = w
		return(v)

	def merge(self,s,t):
		if self.size[s] < self.size[t]:
			self.comp[s] = self.comp[t]
			self.size[t] = self.size[s] + self.size[t]
		else:
			self.comp[t] = self.comp[s]
			self.size[s] = self.size[s] + self.size[t]
            
            
N, M = list(map(int,input().split()))
m = 1000007

D = disjset(N)

for i in range(M):
    A, B = list(map(int,input().split()))
    D.merge(A-1,B-1)

res = 1

for i in range(N):
    if D.find(i) == i:
        res = (res*D.size[i])%m

print(res)
        
